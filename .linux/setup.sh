#!/bin/bash
THIS_DIR=$(dirname "$(realpath "$0")")
echo "üìÅ $THIS_DIR"
PARENT_DIR=$(dirname "$THIS_DIR")
echo "üìÅ $PARENT_DIR"

NEW_USER="odoo-scale-up"
USER_UID=1000
USER_GID=1000

# Ki·ªÉm tra n·∫øu user ƒë√£ t·ªìn t·∫°i
if id "$NEW_USER" >/dev/null 2>&1; then
    echo "üë§ User '$NEW_USER' already exists."
else
    # T·∫°o user v·ªõi UID v√† GID c·ª• th·ªÉ
    groupadd -g $USER_GID "$NEW_USER"
    useradd -m -u $USER_UID -g $USER_GID -s /bin/bash "$NEW_USER"
    echo "User '$NEW_USER' created with UID=$USER_UID and GID=$USER_GID."
fi
# T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt
mkdir -p postgresql/data odoo/addons odoo/conf odoo/web-data odoo/log nginx/log

# G√°n quy·ªÅn s·ªü h·ªØu cho user 'odoo'
sudo chown -R $USER_UID:$USER_GID ./nginx/log
sudo chown -R $USER_UID:$USER_GID ./odoo
sudo chown -R $USER_UID:$USER_GID ./postgresql/data

# G√°n quy·ªÅn truy c·∫≠p
sudo chmod -R 775 ./nginx/log
sudo chmod -R 775 ./odoo
sudo chmod -R 775 ./postgresql/data

echo "‚úÖ Permissions and ownership have been set successfully."

# Font Courier l√† m·ªôt font ph·ªï bi·∫øn, nh∆∞ng c√≥ th·ªÉ kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t s·∫µn trong container Odoo. B·∫°n c√≥ th·ªÉ th√™m font n√†y b·∫±ng c√°ch s·ª≠a Dockerfile ho·∫∑c ch·∫°y l·ªánh trong container.
sudo apt update && sudo apt install gsfonts -y

# ==============================================================================
# if [ -f install_fail2ban.sh ]; then
#     bash install_fail2ban.sh
# else
#     echo "‚ùå File install_fail2ban.sh kh√¥ng t·ªìn t·∫°i, Docker s·∫Ω kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t."
# fi

# ==============================================================================
# if [ -f install_docker.sh ]; then
#     bash install_docker.sh
# else
#     echo "‚ùå File install_docker.sh kh√¥ng t·ªìn t·∫°i, Docker s·∫Ω kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t."
# fi

# ==============================================================================
#  Install Kubernetes k8s
# ==============================================================================